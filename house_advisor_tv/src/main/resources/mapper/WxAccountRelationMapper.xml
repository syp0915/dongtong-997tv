<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shfc.nnstv.dao.WxAccountRelationMapper">
  <resultMap id="BaseResultMap" type="com.shfc.nnstv.domain.WxAccountRelation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="wx_open_id" jdbcType="VARCHAR" property="wxOpenId" />
    <result column="wx_office_account_flag" jdbcType="VARCHAR" property="wxOfficeAccountFlag" />
    <result column="binding_time" jdbcType="TIMESTAMP" property="bindingTime" />
    <result column="binding_status" jdbcType="TINYINT" property="bindingStatus" />
    <result column="creater" jdbcType="BIGINT" property="creater" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier" jdbcType="BIGINT" property="modifier" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, account_id, type, wx_open_id, wx_office_account_flag, binding_time, binding_status, 
    creater, create_time, modifier, modify_time, version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wx_account_relation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from wx_account_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.shfc.nnstv.domain.WxAccountRelation" useGeneratedKeys="true">
    insert into wx_account_relation (id, account_id, type, 
      wx_open_id, wx_office_account_flag, binding_time, 
      binding_status, creater, create_time, 
      modifier, modify_time, version
      )
    values (#{id,jdbcType=BIGINT}, #{accountId,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, 
      #{wxOpenId,jdbcType=VARCHAR}, #{wxOfficeAccountFlag,jdbcType=VARCHAR}, #{bindingTime,jdbcType=TIMESTAMP}, 
      #{bindingStatus,jdbcType=TINYINT}, #{creater,jdbcType=BIGINT}, now(), 
      #{modifier,jdbcType=BIGINT}, #{modifyTime,jdbcType=TIMESTAMP}, 0
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.shfc.nnstv.domain.WxAccountRelation" useGeneratedKeys="true">
    insert into wx_account_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="wxOpenId != null">
        wx_open_id,
      </if>
      <if test="wxOfficeAccountFlag != null">
        wx_office_account_flag,
      </if>
      <if test="bindingTime != null">
        binding_time,
      </if>
      <if test="bindingStatus != null">
        binding_status,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="wxOpenId != null">
        #{wxOpenId,jdbcType=VARCHAR},
      </if>
      <if test="wxOfficeAccountFlag != null">
        #{wxOfficeAccountFlag,jdbcType=VARCHAR},
      </if>
      <if test="bindingTime != null">
        #{bindingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bindingStatus != null">
        #{bindingStatus,jdbcType=TINYINT},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        0,
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shfc.nnstv.domain.WxAccountRelation">
    update wx_account_relation
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="wxOpenId != null">
        wx_open_id = #{wxOpenId,jdbcType=VARCHAR},
      </if>
      <if test="wxOfficeAccountFlag != null">
        wx_office_account_flag = #{wxOfficeAccountFlag,jdbcType=VARCHAR},
      </if>
      <if test="bindingTime != null">
        binding_time = #{bindingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bindingStatus != null">
        binding_status = #{bindingStatus,jdbcType=TINYINT},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=BIGINT},
      </if>
      modify_time = now(),
      version = version+1
    </set>
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shfc.nnstv.domain.WxAccountRelation">
    update wx_account_relation
    set account_id = #{accountId,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT},
      wx_open_id = #{wxOpenId,jdbcType=VARCHAR},
      wx_office_account_flag = #{wxOfficeAccountFlag,jdbcType=VARCHAR},
      binding_time = #{bindingTime,jdbcType=TIMESTAMP},
      binding_status = #{bindingStatus,jdbcType=TINYINT},
      creater = #{creater,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=BIGINT},
      modify_time = now(),
      version = version+1
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
  </update>
</mapper>